//implementing queue using linked list
#include <stdio.h>
#include <stdlib.h>

struct Node
{
    int data;
    struct Node* next;
};

void enqueue(struct Node **front, struct Node **rear, int val);
void dequeue(struct Node **front, struct Node **rear);

int main()
{
    struct Node *front = NULL, *rear = NULL;
    int val, choice;
    while (1)
    {
        printf("1. Enqueue\n2. Dequeue\n3. Exit\nEnter your choice: ");
        scanf("%d", &choice);
        switch (choice)
        {
            case 1:
                printf("Enter value to enqueue: ");
                scanf("%d", &val);
                enqueue(&front, &rear, val);
                break;
            case 2:
                dequeue(&front, &rear);
                break;
            case 3:
                return 0;
            default:
                printf("Invalid choice\n");
        }
    }
    return 0;
}

void enqueue(struct Node **front, struct Node **rear, int val)
{
    struct Node *newnode = (struct Node*)malloc(sizeof(struct Node));
    newnode->data = val;
    newnode->next = NULL;
    if (*rear == NULL)
    {
        *front = newnode;
        *rear = newnode;
    }
    else
    {
        (*rear)->next = newnode;
        *rear = newnode;
    }
    printf("Enqueued %d\n", val);
}

void dequeue(struct Node **front, struct Node **rear)
{
    if (*front == NULL)
    {
        printf("Queue is empty\n");
        return;
    }
    struct Node *temp = *front;
    *front = (*front)->next;
    if (*front == NULL)
    {
        *rear = NULL;
    }
    printf("Dequeued %d\n", temp->data);
    free(temp);
}